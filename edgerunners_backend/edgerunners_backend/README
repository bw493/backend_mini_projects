# Edgerunners Backend Project

Welcome to the Edgerunners Backend project! This is a Django-based backend designed to handle API logic, user authentication, and more. Below is a guide to the folder structure and files to help you navigate and understand the project.

## Project Structure

edgerunners_backend/
├── myapp/                     # Custom app for general functionality
│   ├── migrations/            # Database migrations
│   ├── __init__.py            # Marks the directory as a Python package
│   ├── admin.py               # Admin configuration for the app
│   ├── apps.py                # App configuration
│   ├── models.py              # Database models
│   ├── tests.py               # Unit tests
│   ├── views.py               # View functions for handling requests
│   └── urls.py                # URL routing for the app
├── api/                       # App for API-specific logic
│   ├── migrations/            # Database migrations
│   ├── __init__.py            # Marks the directory as a Python package
│   ├── admin.py               # Admin configuration for the app
│   ├── apps.py                # App configuration
│   ├── models.py              # Database models
│   ├── tests.py               # Unit tests
│   ├── views.py               # View functions for handling API requests
│   └── urls.py                # URL routing for the API
├── edgerunners_backend/       # Main project configuration
│   ├── __init__.py            # Marks the directory as a Python package
│   ├── asgi.py                # ASGI configuration for async server
│   ├── settings.py            # Project settings (e.g., installed apps, middleware)
│   ├── urls.py                # Main URL routing for the project
│   └── wsgi.py                # WSGI configuration for deployment
├── manage.py                  # Django command-line utility
└── requirements.txt           # List of Python dependencies


## Key Files and Their Purpose

### `myapp/`
- **`views.py`**: Contains view functions for handling requests (e.g., returning a welcome message).
- **`urls.py`**: Defines URL patterns for the app (e.g., mapping the root URL to a view).
- **`models.py`**: Defines database models for the app (if needed).
- **`admin.py`**: Registers models with the Django admin panel.

### `api/`
- **`views.py`**: Contains API-specific view functions (e.g., returning JSON responses).
- **`urls.py`**: Defines URL patterns for the API (e.g., mapping `/api/` to API views).
- **`models.py`**: Defines database models for the API (if needed).

### `edgerunners_backend/` (Project Configuration)
- **`settings.py`**: Contains project-wide settings, such as:
  - `INSTALLED_APPS`: Lists all apps used in the project.
  - `DATABASES`: Configures the database connection.
  - `MIDDLEWARE`: Defines middleware for request/response processing.
- **`urls.py`**: Main URL routing file that includes URLs from `myapp` and `api`.

### `manage.py`
A command-line utility for interacting with the Django project (e.g., running the server, creating migrations).

### `requirements.txt`
Lists all Python dependencies required for the project. Install them using:

```bash
pip install -r requirements.txt

Access the Project
Open your browser and visit:

API Endpoint: http://127.0.0.1:8000/api/
Root Endpoint (myapp): http://127.0.0.1:8000/
